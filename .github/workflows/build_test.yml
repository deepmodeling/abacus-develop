name: Build Test
on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'docs/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - tag: gnu
          build_args: ""
          name: "Build with GNU compilers"
        - tag: gnu
          build_args: "-DENABLE_LIBXC=1 -DENABLE_DEEPKS=1 -DENABLE_LIBRI=1"
          name: "Build with GNU compilers and extra components"
        - tag: intel
          build_args: ""
          name: "Build with Intel compilers"
        - tag: cuda
          build_args: "-DUSE_CUDA=1"
          name: "Build with CUDA kit"
        - tag: intel
          build_args: "-DENABLE_LCAO=OFF"
          name: "Build without LCAO"
        - tag: gnu
          build_args: "-DENABLE_LIBXC=1 -DENABLE_DEEPKS=1 -DENABLE_LIBRI=1 -DUSE_ELPA=0"
          name: "Build with GNU compilers and extra components without ELPA"
    name: ${{ matrix.name }}
    container: ghcr.io/deepmodeling/abacus-${{ matrix.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download DeePMD-kit
        run: |
          mkdir -p ${{ runner.temp }}
          wget https://github.com/deepmodeling/deepmd-kit/releases/download/v2.2.0.b0/libdeepmd_c.tar.gz -O ${{ runner.temp }}/libdeepmd_c.tar.gz --no-check-certificate
          tar vczf ${{ runner.temp }}/libdeepmd_c.tar.gz --directory=${{ runner.temp }}/libdeepmd_c
      - name: Build
        run: |
          git config --global --add safe.directory `pwd`
          cmake -B build -DBUILD_TESTING=ON ${{ matrix.build_args }} -DDeePMD_DIR=${{ runner.temp }}/libdeepmd_c
          cmake --build build -j2
